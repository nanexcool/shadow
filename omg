#!/usr/bin/env bash
set -e
echo >&2 "--------- STARTING PROGRAM ---------"
[[ $ETH_FROM ]] || export ETH_FROM="0x00DaA9a2D88BEd5a29A6ca93e0B7d860cd1d403F";
txs=($HASHES)
[[ $ETH_GAS ]] || export ETH_GAS=200000
[[ $ETH_GAS_PRICE ]] || export ETH_GAS_PRICE=`seth --to-wei 1 gwei`
export SETH_ASYNC=yes
echo >&2 "Found ${#txs[@]} pending transactions"
for x in "${txs[@]}";
do
    echo >&2 "Checking status of tx $x"
    res=$(set -x; seth receipt "$x" blockNumber) || true
    [[ $res ]] && mined=$x;
done
if [[ $mined ]]; then
    #reset gas
    echo >&2 "Tx $mined was mined successfully."
    HASHES=""
    export ETH_GAS_PRICE=`seth --to-wei 1 gwei`
else
    if [[ ${#txs[@]} -gt 0 ]]; then
        # increase gas price
        export ETH_GAS_PRICE=$(($ETH_GAS_PRICE * 2))
        echo >&2 "New gas price: $ETH_GAS_PRICE"
    fi
fi
nonce=$(seth nonce "$ETH_FROM")
export ETH_NONCE=$nonce
echo >&2 "Sending with nonce $ETH_NONCE"
### Actual thing to do...
# value=`seth --to-wei 1 gwei`
# tx=$(set -x; seth send 0xd0148Dad63F73CE6f1B6c607e3413dCF1Ff5f030 -V "$value") || true
SOURCE=cryptocompare
POKER=0xD0E900C153225517739B0Df07A00DE2E76e263cb
MED=0x729d19f657bd0614b4985cf1d82531c67569197b
new=$(setzer price "$SOURCE")
until=$(date +%s -d'+6 hour')
tx=$(SETH_ASYNC=yes setzer post "$POKER" "$new" "$until" "$MED")
###
HASHES="${txs[@]} $tx"
export HASHES=$HASHES
echo >&2 "will sleep for 120 seconds"
sleep 120;
exec "$0" "$@"
